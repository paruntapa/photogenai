// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String @id @default(uuid())
  username               String 
  profilePicture         String?

  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
}

enum ModelTrainingStatusEnum { 
  Pending
  Generated
  Failed
}

model Model {
  id             String @id @default(uuid())
  userId         String
  triggerWord    String?
  tensorPath     String?
  name           String
  type           ModelTypeEnum
  age            Int
  ethinicity     EthinicityEnum
  eyeColor       EyeColorEnum  
  bald           Boolean
  trainingStatus ModelTrainingStatusEnum @default(Pending)
  falAiRequestId String?
  zipUrl         String
  outputImages   OutputImages[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  @@index([falAiRequestId])
}

enum OutputImagesStatusEnum { 
  Pending
  Generated
  Failed
}

model OutputImages {
  id               String @id @default(uuid())
  imageUrl         String @default("")
  modelId          String
  userId           String
  falAiRequestId   String?
  prompt           String
  status           OutputImagesStatusEnum  @default(Pending)
  model            Model    @relation(fields: [modelId], references: [id])
  createdAt    DateTime       @default(now()) 
  updatedAt    DateTime       @updatedAt
  @@index([falAiRequestId])

}

model Packs {
  id           String @id @default(uuid())
  name         String
  description  String @default("")
  imageUrl1    String @default("")
  imageUrl2    String @default("")
  prompts      PackPrompts[]

}

model PackPrompts {
  id           String @id @default(uuid())
  prompt       String
  packId       String

  pack         Packs   @relation(fields: [packId], references: [id])
}


enum ModelTypeEnum {
  Man
  Woman
  Others
}

enum EthinicityEnum {
  White
  Black
  Asian_American         
  East_Asian            
  South_East_Asian      
  Middle_Eastern        
  Hispanic
  Pacific
  South_Asian            
}

enum EyeColorEnum {
  Brown
  Blue
  Hazel
  Gray
}